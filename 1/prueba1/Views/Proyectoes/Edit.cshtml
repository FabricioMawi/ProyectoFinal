@model prueba1.Models.Proyecto

@{
    ViewBag.Title = "Edit";
}

<h2>Editar proyecto</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="row small-spacingr" style="margin-left: 35vh;">
    <div class="col-lg-10 col-xs-12">
        <div class="box-content card white">
            <div class="card-content">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.idProyecto)

                <div class="form-group">
                    @Html.LabelFor(model => model.nombreProyecto, "Proyecto", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.nombreProyecto, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.nombreProyecto, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.idContacto, "Contacto", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-10">
                        @Html.DropDownList("idContacto", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.idContacto, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.idCurso, "Curso", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-10">
                        @Html.DropDownList("idCurso", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.idCurso, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.tecnologia, "Tecnologia", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.tecnologia, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.tecnologia, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.idProfesor, "Profesor", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-10">
                        @Html.DropDownList("idProfesor", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.idProfesor, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.idGrupo, "Grupo", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-10">
                        @Html.DropDownList("idGrupo", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.idGrupo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.idGrupo, "Estado", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-10">


                        @Html.DropDownListFor(model => model.estadoProyecto, new SelectListItem[]
                 {
                     new SelectListItem() {Text = "Activo" , Value = "Activo"},
                     new SelectListItem() {Text = "En Proceso" , Value = "En Proceso"},
                     new SelectListItem() {Text = "Desertado" , Value = "Desertado"},
                     new SelectListItem() {Text = "Implantado" , Value = "Implantado"}
                 }, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.estadoProyecto, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.fechaInicio, "Fecha de Inicio", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.fechaInicio, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.fechaInicio, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.fechaFinalizado, "Fecha de Finalización", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.fechaFinalizado, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.fechaFinalizado, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
                <div class="form-group justify-content-start"style="padding: 5vh;">
                    <div class="col-md-offset-4 col-md-12">
                        <input type="submit" value="Guardar Cambios" class="btn btn-primary" style="background-color:navy" />
                    </div>
                </div>
            </div>
        </div>
    </div>

    }

    <div>
        @Html.ActionLink("Volver a la lista", "Index")
    </div>
